fn f() ?&int {
	return none
}
a := f() or {
	{}
}
_ = f() or {
	a
}
_ = f() or {
	`.`
}
_ = f() or {
	assert true
}
_ = f() or {
	assert false
}
_ = f() or {
	panic(err)
}
_ = f() or {
  return
}
