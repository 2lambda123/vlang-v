// V_COMMIT_HASH 972f60d
// V_CURRENT_COMMIT_HASH f07e52f
// Generated by the V compiler

"use strict";

/** @namespace builtin */
const builtin = (function () {
	/**
	 * @constructor
	 * @param {{element_size?: number, data?: any, len?: number, cap?: number}} init
	*/
	function array({ element_size = 0, data = undefined, len = 0, cap = 0 }) {
		this.element_size = element_size
		this.data = data
		this.len = len
		this.cap = cap
	};
	array.prototype = {
		/** @type {number} */
		element_size: 0,
		/** @type {any} */
		data: undefined,
		/** @type {number} */
		len: 0,
		/** @type {number} */
		cap: 0
	};

	/**
	 * @function
	 * @param {any} s
	 * @returns {void}
	*/
	function println(s) {
		console.log(s);
	}
	
	/**
	 * @function
	 * @param {any} s
	 * @returns {void}
	*/
	function print(s) {
		process.stdout.write(s);
	}
	
	/**
	 * @function
	 * @param {any} s
	 * @returns {void}
	*/
	function eprintln(s) {
		console.error(s);
	}
	
	/**
	 * @function
	 * @param {any} s
	 * @returns {void}
	*/
	function eprint(s) {
		process.stderr.write(s);
	}
	
	/**
	 * @function
	 * @param {number} c
	 * @returns {void}
	*/
	function exit(c) {
		process.exit(c);
	}
	
	/**
	 * @function
	 * @param {string} s
	 * @returns {void}
	*/
	function panic(s) {
		builtin.eprintln(`V panic: ${s}`);
		builtin.exit(1);
	}

	/* module exports */
	return {
		array,
		println,
		print,
		eprintln,
		eprint,
		exit,
		panic
	};
})();

/** @namespace main */
const main = (function () {
	/**
	 * @constructor
	 * @param {{name?: string, age?: number}} init
	*/
	function Dog({ name = "", age = 0 }) {
		this.name = name
		this.age = age
	};
	Dog.prototype = {
		/** @type {string} */
		name: "",
		/** @type {number} */
		age: 0,
		/**
		 * @function
		 * @param {string} s
		 * @returns {void}
		*/
		say(s) {
			const d = this;
			builtin.println(`Dog ${d.name}: "${s}"`);
		},
		/**
		 * @function
		 * @returns {number}
		*/
		greet() {
			const d = this;
			d.say("Hello!");
			return d.age;
		}
	};

	/**
	 * @constructor
	 * @param {{name?: string, age?: number}} init
	*/
	function Cat({ name = "", age = 0 }) {
		this.name = name
		this.age = age
	};
	Cat.prototype = {
		/** @type {string} */
		name: "",
		/** @type {number} */
		age: 0,
		/**
		 * @function
		 * @param {string} s
		 * @returns {void}
		*/
		say(s) {
			const c = this;
			builtin.println(`Cat ${c.name}: "${s}"`);
		},
		/**
		 * @function
		 * @returns {number}
		*/
		greet() {
			const c = this;
			c.say("Hello!");
			return c.age;
		}
	};

	/**
	 * @interface Animal
	 * @typedef Animal
	 * @property {(s: string) => void} say
	 * @property {() => number} greet
	 */


	
	
	
	
	/**
	 * @function
	 * @param {Animal} a
	 * @returns {void}
	*/
	function use(a) {
		if (a instanceof Dog) {
			builtin.println("dog");
		} else if (a instanceof Cat) {
			builtin.println("cat");
		} else {
			builtin.println("its a bug!");
		}
		
		;
	}
	
	/* program entry point */
	(function() {
		use(new Dog({
			name: "Doggo",
			age: 5
		}));
		use(new Cat({
			name: "Nyancat",
			age: 6
		}));
	})();

	/* module exports */
	return {};
})();


