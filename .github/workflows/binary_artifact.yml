name: Build binary artifacts

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc]

    steps:
    - uses: actions/checkout@v1
    - name: make
      env:
        CC: ${{ matrix.compiler }}
      run: make
    - name: Create artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux
        path: |
          .
          !./.git
          !./.ctags.d
          !./.github
          !./vc
          !./v_old
    - name: Create binary only artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux-binary
        path: ./v

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        compiler: [clang]

    steps:
    - uses: actions/checkout@v1
    - name: make
      env:
        CC: ${{ matrix.compiler }}
      run: make
    - name: Create artifact
      uses: actions/upload-artifact@v2
      with:
        name: macos
        path: |
          .
          !./.git
          !./.ctags.d
          !./.github
          !./vc
          !./v_old
    - name: Create binary only artifact
      uses: actions/upload-artifact@v2
      with:
        name: macos-binary
        path: ./v

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
    - uses: msys2/setup-msys2@v2
    - name: make
      run: ./make.bat
    - name: Create artifact
      uses: actions/upload-artifact@v2
      with:
        name: windows
        path: |
          .
          !./.git
          !./.ctags.d
          !./.github
          !./vc
          !./v_old
    - name: Create binary only artifact
      uses: actions/upload-artifact@v2
      with:
        name: windows-binary
        path: ./v.exe
        
  release:
    name: Create Github Release
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true
        tag: latest-master
        release_name: Latest ${{ github.ref }}
        draft: false
        prerelease: true
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt
